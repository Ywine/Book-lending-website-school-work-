{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\vue-circleprogressbar\\src\\components\\CircleProgress.vue?vue&type=style&index=0&id=25b28594&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\vue-circleprogressbar\\src\\components\\CircleProgress.vue","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\web课程设计\\vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.content {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.center_text {\r\n  position: absolute;\r\n  color: #1890ff;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n}\r\n",{"version":3,"sources":["CircleProgress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CircleProgress.vue","sourceRoot":"node_modules/vue-circleprogressbar/src/components","sourcesContent":["<template>\r\n  <div class=\"content\" ref=\"box\">\r\n    <svg style=\"transform: rotate(-90deg)\" :width=\"width\" :height=\"width\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <circle :r=\"(width-radius)/2\"\r\n        :cy=\"width/2\"\r\n        :cx=\"width/2\"\r\n        :stroke-width=\"radius\"\r\n        :stroke=\"backgroundColor\"\r\n        fill=\"none\"\r\n      />\r\n      <circle ref=\"$bar\"\r\n        :r=\"(width-radius)/2\"\r\n        :cy=\"width/2\"\r\n        :cx=\"width/2\"\r\n        :stroke=\"barColor\"\r\n        :stroke-width=\"radius\"\r\n        :stroke-linecap=\"isRound ? 'round' : 'square'\"\r\n        :stroke-dasharray=\"(width-radius)*3.14\"\r\n        :stroke-dashoffset=\"isAnimation ? (width-radius) * 3.14 : (width - radius) * 3.14 * (100 - progress) / 100\"\r\n        fill=\"none\"\r\n      />\r\n    </svg>\r\n    <div class=\"center_text\">\r\n        <p v-if=\"!$slots.default\" class=\"title\">{{progress}}%</p>\r\n        <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\nexport default {\r\n  props: {\r\n    radius: {\r\n      type: [Number, String],\r\n      default: 20\r\n    }, // 进度条厚度\r\n    progress: {\r\n      type: [Number, String],\r\n      default: 20\r\n    }, // 进度条百分比\r\n    barColor: {\r\n      type: String,\r\n      default: \"#1890ff\"\r\n    }, // 进度条颜色\r\n    backgroundColor: {\r\n      type: String,\r\n      default: \"rgba(0,0,0,0.3)\"\r\n    }, // 背景颜色\r\n    isAnimation: {\r\n      // 是否是动画效果\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    isRound: {\r\n      // 是否是圆形画笔\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    id: {\r\n      // 组件的id，多组件共存时使用\r\n      type: [String, Number],\r\n      default: 1\r\n    },\r\n    duration: {\r\n      // 整个动画时长\r\n      type: [String, Number],\r\n      default: 1000\r\n    },\r\n    delay: {\r\n      // 延迟多久执行\r\n      type: [String, Number],\r\n      default: 200\r\n    },\r\n    timeFunction: {\r\n      // 动画缓动函数\r\n      type: String,\r\n      default: \"cubic-bezier(0.99, 0.01, 0.22, 0.94)\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      width: 100,\r\n      idStr: `circle_progress_keyframes_${this.id}`\r\n    };\r\n  },\r\n  beforeDestroy() {\r\n    // 清除旧组件的样式标签\r\n    document.getElementById(this.idStr) &&\r\n      document.getElementById(this.idStr).remove();\r\n    window.addEventListener(() => {});\r\n  },\r\n  mounted() {\r\n    let self = this;\r\n    this.setCircleWidth();\r\n    this.setAnimation();\r\n    // 此处不能使用window.onresize\r\n    window.addEventListener(\r\n      \"resize\",\r\n      _.debounce(function() {\r\n        self.setCircleWidth();\r\n        self.setAnimation(self);\r\n      }, 300)\r\n    );\r\n  },\r\n  methods: {\r\n    setCircleWidth() {\r\n      let box = this.$refs.box;\r\n      let width = box.clientWidth;\r\n      let height = box.clientHeight;\r\n      let cW = width > height ? height : width;\r\n      this.width = cW;\r\n    },\r\n    setAnimation() {\r\n      let self = this;\r\n      if (self.isAnimation) {\r\n        // 重复定义判断\r\n        if (document.getElementById(self.idStr)) {\r\n          console.warn(\"vue-circle-progress should not have same id style\");\r\n          document.getElementById(self.idStr).remove();\r\n        }\r\n        // 生成动画样式文件\r\n        let style = document.createElement(\"style\");\r\n        style.id = self.idStr;\r\n        style.type = \"text/css\";\r\n        style.innerHTML = `\r\n      @keyframes circle_progress_keyframes_name_${self.id} {\r\n      from {stroke-dashoffset: ${(self.width - self.radius) * 3.14}px;}\r\n      to {stroke-dashoffset: ${((self.width - self.radius) *\r\n        3.14 *\r\n        (100 - self.progress)) /\r\n        100}px;}}\r\n      .circle_progress_bar${\r\n        self.id\r\n      } {animation: circle_progress_keyframes_name_${self.id} ${\r\n          self.duration\r\n        }ms ${self.delay}ms ${self.timeFunction} forwards;}`;\r\n        // 添加新样式文件\r\n        document.getElementsByTagName(\"head\")[0].appendChild(style);\r\n        // 往svg元素中添加动画class\r\n        self.$refs.$bar.classList.add(`circle_progress_bar${self.id}`);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style  scoped>\r\n.content {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.center_text {\r\n  position: absolute;\r\n  color: #1890ff;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]}]}